Comentar aula 05

CSS: /*blablabla*/ varias linhas

HTML: <!--blablabla-->

JS: /*blablabla*/ varias linhas e //blablabla.... unica linha linhas 

##########################################################################################################

Concatenar Usando o template String  aula 06

inicia com crase (`${nome da variavel}`)

#########################################################################################################
 
Nome dos Identificadores** aula 06

Podem come�ar com letras, $ ou _

N�o podem come�ar com n�meros

� poss�vel usar letras ou n�meros

� possivel usar acentos e s�mbolos

N�o podem conter espa�os

N�o podem ser palavras reservadas

Dicas
 Maiuscula e min�scula fazem diferen�a (ex: var a � diferente de var A)

Tente escolher nomes coerentes para as vari�veis(ex: var salario, var idade)

Evite se tornar um 'programador alfabeto'(ex: var a, var b, var c) ou um 'programador contador'(ex: var n1,
 var n2, var n3)

###########################################################################################################

Data Types (Tipo de dados) aula 06

--> typeof<-- identifica o tipo

number (ex: var n = 200, var n = 6, var n = 6.5)

string (ex: var n = "6.5", var n = "Google")

boolean 

null 

undefined

object

function

############################################################################################################

Converter Strig para N�mero aula 06

Nunber(nome da variavel)

Number.parseInt(nome variavel) Converte numeros inteiros, 5, 10, 5000 --> modo for�ado 

Number.parseFloat (nome variavel) Converte numeros decimais, 5.5, 10.3, 5000.2 --> modo for�ado

Converter N�mero para String

String(nome da variavel)

nome da variavel.toString()

##########################################################################################################

Formatando Strings aula 06

nome da variavel.length (define quantos caracteres a string tem)

nome da variavel.toUpperCase (define tudo em MAIUSCULO)

nome da variavel.toLwerCase (define tudo em minusculo)

nome da variavel.toFixed(2) (exibe 2 casas decimais)

nome da variavel.toFixed(2).replace('.', ',') (exibe 2 casas decimais e converte ponto em virgula) 

nome da variavel.toLocalString('pt-BR', {style: 'currency', currency: 'BRL'}) (exibe valores com cifr�o em rais ou dolar se usar USD)

#############################################################################################################################

Aula 07 Operadores Parte 1 (Aritméticos e atribuição)

Aritm�ticos binarios (depende de dois operandos, ex: 5+2) 
+ - * / % 

** este � potencia

Cuidados
5 + 3 / 2 = 6,5 (calcula primeiro a divisão 3/2 = 1.5 + 5 = 6,5)
(5+3) / 2 = 4   (Calcula primeiro os parenteses 5 + 3  = 8 / 2 = 4)

Orden de Precedência
1º ()
2º **
3º * / %
4ª + -

Simplificando
var n = 3
n = n + 4  pode Simplificar deste modo n += 4, somente quando for a mesma 
variavel no n
O mesmo para
n = n - 5   n -= 5
n = n * 4   n *= 4
n = n / 2   n /= 2
n = n ** 2  n **= 2
n = n % 5   n %= 5
Grande maioria das linguagens aceita esta sintaxe

Incremento
var x = 5
x = x + 1  x ++
x = x - 1  x --

#############################################################################

Aula 08 Operadores Parte 2 (Relacionais, Lógicos e Ternário)

Relacionais
>    
<
>=
<=
==
!=

5 > 2  = true
7 < 4  = false
8 >= 8 = true
9 <= 7 = false
5 == 5 = true
4 != 4 = false

se for na mesma linha primeiro calcula os Aritméticos e depois os Relacionais

Lógicos
!
&&
||

!  negação
&& conjunção (e)  (binario, depende de dois resultados)
|| disjunção (ou) (binario, depende de dois resultados)

se for na mesma linha primeiro calcula os Aritméticos e depois os Relacionais e 
depois os Lógicos 

Orden é primeiro o ! (não) depois o && (e) e por ultimo || (ou) se for na mesma linha 

Orden de Precedência
1º Aritméticos () ** / ...
2º Relacionais > < >=  ...
3º Lógicos ! && ||     ...  
4º
5º
6º
7º

Ternário
?
:
teste ? true : false
Ex: média >=7.0 ? "Aprovado" : "Reprovado"